set(MES_PREF_NOTICE "** [NOTICE] ** ")
set(MES_PREF_INFO   "** [INFO] ** ")
set(MES_PREF_VARS   "** [VARS] ** ")


if (WIN32 AND ${CMAKE_C_COMPILER} STREQUAL "cl" AND ${CMAKE_CXX_COMPILER} STREQUAL "cl")
  message(${MES_PREF_NOTICE} "If you get the error message \"Compiler not found\", run the CMake executable after running \"vcvarsall.bat\".")
  file(GLOB_RECURSE VCVARSALL_LIST "C:/Program Files*/vcvarsall.bat")
  list(LENGTH VCVARSALL_LIST VCVARSALL_LIST_LENGTH)
  if(${VCVARSALL_LIST_LENGTH} GREATER 0)
    message(${MES_PREF_INFO} "Path of \"vcvarsall.bat\" file: \"${VCVARSALL_LIST}\"")
  else()
    message(${MES_PREF_INFO} "File \"vcvarsall.bat\" not found")
  endif()
endif()

# if (${CMAKE_CXX_COMPILER} STREQUAL "cl")
#   file(GLOB_RECURSE CL_EXE_LIST "C:/Program Files*/cl.exe")
#   list(LENGTH CL_EXE_LIST CL_EXE_LIST_LENGTH)
#   file(GLOB_RECURSE LINK_EXE_LIST "C:/Program Files*/link.exe")
#   list(LENGTH LINK_EXE_LIST LINK_EXE_LIST_LENGTH)
#   if (${CL_EXE_LIST_LENGTH} GREATER 0 AND ${LINK_EXE_LIST_LENGTH} GREATER 0)
#     list(GET CL_EXE_LIST 0 CL_EXE_PATH)
#     list(GET LINK_EXE_LIST 0 LINK_EXE_PATH)
#     message(${MES_PREF} "CL_EXE_PATH: ${CL_EXE_PATH}")
#     message(${MES_PREF} "LINK_EXE_PATH: ${LINK_EXE_PATH}")
#     set(CMAKE_C_COMPILER "${CL_EXE_PATH}" CACHE STRING "" FORCE)
#     set(CMAKE_CXX_COMPILER "${CL_EXE_PATH}" CACHE STRING "" FORCE)
#     set(CMAKE_C_LINK_EXECUTABLE "${LINK_EXE_PATH}" CACHE STRING "" FORCE)
#     set(CMAKE_CXX_LINK_EXECUTABLE "${LINK_EXE_PATH}" CACHE STRING "" FORCE)
#   endif()
# endif()
# if (${CMAKE_C_COMPILER} STREQUAL "cl" AND ${CMAKE_CXX_COMPILER} STREQUAL "cl")
#   set(CMAKE_C_COMPILER "gcc" CACHE STRING "" FORCE)
#   set(CMAKE_CXX_COMPILER "g++" CACHE STRING "" FORCE)
# endif()
